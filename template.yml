AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Parameters:
  TableName:
    Type: String
    Default: "todotasks"
    Description: (Required) The name of the new DynamoDB table you want to create and save to. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'
Resources:
  TodoApi:
    Type: AWS::Serverless::Api
    Properties:
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      StageName: prod
      DefinitionBody:
        swagger: 2.0
        info:
          title:
            Ref: AWS::StackName
        paths:          
          /tasks:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoFind.Arn}/invocations
            post:
              parameters:
                - in: body
                  name: item
                  schema:
                    type: object
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoCreate.Arn}/invocations
          /tasks/{id}:
            get:
              parameters:
              - name: id
                in: path
                required: true
                type: string
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoGet.Arn}/invocations
            put:
              parameters:
              - name: id
                in: path
                required: true
                type: string
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoUpdate.Arn}/invocations
            delete:
              parameters:
              - name: id
                in: path
                required: true
                type: string
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoDelete.Arn}/invocations
  TodoFind:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: src/find
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Events:
        TodoFindApi:
          Type: Api
          Properties:
            Path: /tasks
            Method: GET
            RestApiId: !Ref TodoApi
  TodoGet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: src/get
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          PRIMARY_KEY: !Sub ${TableName}Id
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Events:
        TodoGetApi:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: GET
            RestApiId: !Ref TodoApi
  TodoCreate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: src/create
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          PRIMARY_KEY: !Sub ${TableName}Id
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Events:
        TodoCreateApi:
          Type: Api
          Properties:
            Path: /tasks
            Method: POST
            RestApiId: !Ref TodoApi
  TodoDelete:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: src/delete
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          PRIMARY_KEY: !Sub ${TableName}Id
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Events:
        TodoDeleteApi:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: DELETE
            RestApiId: !Ref TodoApi
  TodoUpdate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: src/update
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          PRIMARY_KEY: !Sub ${TableName}Id
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Events:
        Api:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: PUT
            RestApiId: !Ref TodoApi
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: !Sub ${TableName}Id
          AttributeType: S
      KeySchema:
        - AttributeName: !Sub ${TableName}Id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: True
      StreamSpecification:
        StreamViewType: NEW_IMAGE
Outputs:
  ApiUrl:
    Value: !Sub https://${TodoApi}.execute-api.${AWS::Region}.amazonaws.com/prod/save
    Description: The URL of the API Gateway you invoke to save to your DynamoDB Table.
  DynamoDBTable:
    Value: !Ref TableName
    Description: The name of your DynamoDB Table
  DynamoDBTableStreamArn:
    Value: !GetAtt DynamoDBTable.StreamArn
    Description: The ARN of your DynamoDB Table Stream
